{"version":3,"sources":["components/Header.js","logo.svg","components/SearchInput.js","components/EmojiResultRow.js","components/EmojiResultsContainer.js","search/filterEmoji.js","App.js","index.js"],"names":["Header","id","href","src","width","height","alt","SearchInput","props","className","onChange","handleSearchChange","EmojiResultRow","emoji","codePointHex","symbol","codePointAt","toString","imgSrc","onClick","navigator","clipboard","writeText","title","EmojiResultsContainer","emojiList","map","filterEmoji","filter","maxResults","toLowerCase","includes","keywords","slice","App","useState","setEmoji","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yssKAwBeA,GCxBA,I,MDGA,WACb,OACE,yBAAQC,GAAG,SAAX,UACE,wDAA0B,mBAAGC,KAAK,QAAR,oCAA1B,gCAAiG,mBAAGA,KAAK,2CAAR,2BAAjG,OACA,qBACEC,IAAI,mDACJC,MAAM,KACNC,OAAO,KACPC,IAAI,KANR,eASE,qBACEH,IAAI,mDACJC,MAAM,KACNC,OAAO,KACPC,IAAI,UELGC,G,MAVK,SAACC,GACnB,OACE,qBAAKC,UAAU,eAAf,SACE,8BACE,uBAAOC,SAAUF,EAAMG,2BCchBC,G,MAlBQ,SAACJ,GAAW,IACzBK,EAAUL,EAAVK,MACFC,EAAeD,EAAME,OAAOC,YAAY,GAAGC,SAAS,IACpDC,EAAM,iDAA6CJ,EAA7C,QAMZ,OACE,sBAAKL,UAAU,mBAAmBU,QALZ,WACtBC,UAAUC,UAAUC,UAAUT,EAAME,SAIpC,UACE,qBAAKT,IAAKO,EAAMU,MAAOpB,IAAKe,IAC5B,sBAAMT,UAAU,QAAhB,SAAyBI,EAAMU,QAC/B,sBAAMd,UAAU,OAAhB,sCCFSe,EAVe,SAAChB,GAAW,IACjCiB,EAAajB,EAAbiB,UAEP,OACE,qBAAKhB,UAAU,0BAAf,SACGgB,EAAUC,KAAI,SAAAb,GAAK,OAAI,cAAC,EAAD,CAAgBA,MAAOA,GAAYA,EAAMU,a,OCMxDI,EAbK,SAACC,EAAQC,GAC3B,OAAOJ,EACJG,QAAO,SAAAf,GACN,SACEA,EAAMU,MAAMO,cAAcC,SAASH,EAAOE,iBACvCjB,EAAMmB,SAASF,cAAcC,SAASH,EAAOE,gBAC7CjB,EAAME,SAAWa,MAIvBK,MAAM,EAAGJ,ICaCK,MAhBf,WAAgB,IAAD,EACaC,mBAASR,EAAY,GAAI,KADtC,mBACNd,EADM,KACCuB,EADD,KAOb,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAaE,mBAPU,SAAC0B,GAC1BD,EAAST,EAAYU,EAAMC,OAAOC,MAAO,QAOvC,cAAC,EAAD,CAAuBd,UAAWZ,QCfxC2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.91f8799a.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css'\n\nconst Header = () => {\n  return (\n    <header id=\"header\">\n      <p>Completed version of a <a href=\"FIXME\">Sample React Exercise.</a> Original project taken from <a href=\"https://github.com/ahfarmer/emoji-search\">Andrew Farmer</a>.</p>\n      <img\n        src=\"//cdn.jsdelivr.net/emojione/assets/png/1f638.png\"\n        width=\"32\"\n        height=\"32\"\n        alt=\"\"\n      />\n      Emoji Search\n      <img\n        src=\"//cdn.jsdelivr.net/emojione/assets/png/1f63a.png\"\n        width=\"32\"\n        height=\"32\"\n        alt=\"\"\n      />\n    </header>\n  )\n}\n\nexport default Header","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react'\nimport './SearchInput.css'\n\nconst SearchInput = (props) => {\n  return (\n    <div className=\"search-input\">\n      <div>\n        <input onChange={props.handleSearchChange} />\n      </div>\n    </div>\n  )\n}\n\nexport default SearchInput","import React from 'react'\nimport './EmojiResultRow.css'\n\nconst EmojiResultRow = (props) => {\n  const { emoji } = props\n  const codePointHex = emoji.symbol.codePointAt(0).toString(16)\n  const imgSrc = `//cdn.jsdelivr.net/emojione/assets/png/${codePointHex}.png`\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(emoji.symbol)\n  }\n\n  return (\n    <div className=\"emoji-result-row\" onClick={copyToClipboard}>\n      <img alt={emoji.title} src={imgSrc} />\n      <span className=\"title\">{emoji.title}</span>\n      <span className=\"info\">Click to copy emoji</span>\n    </div>\n  )\n}\n\nexport default EmojiResultRow","import React from 'react'\n\nimport EmojiResultRow from './EmojiResultRow'\n\nconst EmojiResultsContainer = (props) => {\n  const {emojiList} = props\n\n  return (\n    <div className=\"emoji-results-container\">\n      {emojiList.map(emoji => <EmojiResultRow emoji={emoji} key={emoji.title} />)}\n    </div>\n  )\n}\n\nexport default EmojiResultsContainer","import emojiList from \"./emojiList.json\";\n\nconst filterEmoji = (filter, maxResults) => {\n  return emojiList\n    .filter(emoji => {\n      if (\n        emoji.title.toLowerCase().includes(filter.toLowerCase())\n        || emoji.keywords.toLowerCase().includes(filter.toLowerCase())\n        || emoji.symbol === filter\n      ) return true\n      else return false\n    })\n    .slice(0, maxResults)\n}\n\nexport default filterEmoji","import {useState} from 'react'\nimport logo from './logo.svg'\n\nimport Header from './components/Header'\nimport SearchInput from './components/SearchInput'\nimport EmojiResultsContainer from './components/EmojiResultsContainer'\nimport filterEmoji from './search/filterEmoji'\n\n\nfunction App() {\n  const [emoji, setEmoji] = useState(filterEmoji(\"\", 25))\n\n  const handleSearchChange = (event) => {\n    setEmoji(filterEmoji(event.target.value, 25))\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <SearchInput handleSearchChange={handleSearchChange}/>\n      <EmojiResultsContainer emojiList={emoji}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}